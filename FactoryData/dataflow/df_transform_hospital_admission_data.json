{
	"name": "df_transform_hospital_admission_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospital_admission_data",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionData"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "LookupCountry"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_date_lookup",
						"type": "DatasetReference"
					},
					"name": "DimDateLookup"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SelectTransformation"
				},
				{
					"name": "LoopupCountry"
				},
				{
					"name": "selectReqFields"
				},
				{
					"name": "SplitDailyFromWeekly"
				},
				{
					"name": "DerivedECDCyearWeek"
				},
				{
					"name": "AddDimDate"
				},
				{
					"name": "JoinWithDate"
				},
				{
					"name": "pivot1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionData",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LookupCountry",
				"source(output(",
				"          date_key as date,",
				"          date as date,",
				"          year as string,",
				"          month as short,",
				"          day as short,",
				"          day_name as string,",
				"          day_of_year as short,",
				"          week_of_month as short,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as integer,",
				"          year_week as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimDateLookup",
				"HospitalAdmissionData select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTransformation",
				"SelectTransformation, LookupCountry lookup(SelectTransformation@country == LookupCountry@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LoopupCountry",
				"LoopupCountry select(mapColumn(",
				"          country = SelectTransformation@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country = LookupCountry@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqFields",
				"selectReqFields split(indicator == 'Weekly new hospital admissions per 100k' || indicator == 'Weekly new ICU admissions per 100k',",
				"     disjoint: false) ~> SplitDailyFromWeekly@(Weekly, Daily)",
				"DimDateLookup derive(ecdc_year_week = year + '-W' + lpad(week_of_year,2,'0')) ~> DerivedECDCyearWeek",
				"DerivedECDCyearWeek aggregate(groupBy(ecdc_year_week),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> AddDimDate",
				"SplitDailyFromWeekly@Weekly, AddDimDate join(reported_year_week == ecdc_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithDate",
				"JoinWithDate pivot(groupBy(country,",
				"          reported_date,",
				"          reported_year_week,",
				"          source,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          ecdc_year_week,",
				"          week_start_date,",
				"          week_end_date),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new icu admissions per 100k']),",
				"     {} = sum(value),",
				"     columnNaming: '$N_$V',",
				"     lateral: true) ~> pivot1"
			]
		}
	}
}